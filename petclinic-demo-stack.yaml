AWSTemplateFormatVersion: 2010-09-09
Description: For PetClinic container CI/CD demo
Parameters:
  PetClinicContainerName:
    Type: String
    Default: petclinic-test
    Description: Container name to be populated by CodeBuild
Resources:
  PetClinicECR:
    Type: AWS::ECR::Repository
  PetClinicCodeCommit:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryDescription: CodeCommit Repo for PetClinic CICD Pipeline
      RepositoryName: petclinic-code-repo
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
        - PolicyName: PetClinicCodeBuildServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GitPull
                Resource: !GetAtt PetClinicCodeCommit.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: '*'
              - Effect: Allow
                Action:
                  - securityhub:BatchImportFindings
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Resource: !GetAtt PetClinicECR.Arn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: { Service: codebuild.amazonaws.com }
            Action:
              - sts:AssumeRole
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: PetClinicCodePipelineServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource: !GetAtt PetClinicCodeCommit.Arn
              - Effect: Allow
                Action:
                  - cloudwatch:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: !GetAtt PetClinicCodeBuild.Arn
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: { Service: codepipeline.amazonaws.com }
            Action:
              - sts:AssumeRole
  PetClinicCodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'petclinic-codepipeline-artifacts-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  PetClinicCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: For Security Hub PetClinic Vuln Scanning Blog
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:3.0
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: docker_img_name
            Value: !Ref PetClinicContainerName
          - Name: docker_tag
            Value: latest
          - Name: ecr_repo
            Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${PetClinicECR}'
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      Name: !Sub 'petclinic-build-project-${AWS::AccountId}'
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
  PetClinicCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PetClinicCodePipelineArtifactBucket
        Type: S3
      Name: !Sub 'petclinic-scan-cicd-pipeline-${AWS::AccountId}'
      RestartExecutionOnUpdate: True
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: !GetAtt PetClinicCodeCommit.Name
                BranchName: master
              OutputArtifacts:
                -
                  Name: SourceOutput
              RunOrder: 1
        -
          Name: Build
          Actions:
            -
              InputArtifacts:
                -
                  Name: SourceOutput
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref PetClinicCodeBuild
                PrimarySource: SourceOutput
              RunOrder: 1
